"""阻塞式：添加一个执行一个任务，如果一个任务不结束，另一个任务就进不来。进程池：pool = Pool(maxsize) # 创建进程池对象pool.apply(func) 阻塞式添加任务pool.apply_async(func) 非阻塞式添加任务pool.close()  停止添加进程pool.join() 让主进程让步"""import osfrom multiprocessing import Poolimport timeimport random# 非阻塞式进程def task(task_name):    print('开始做任务了！' + task_name)    start = time.time()    # 使用sleep()    time.sleep(random.random() * 2)    end = time.time()    print('完成{}，用时：{}，任务ID：{}'.format(task_name, (end - start), os.getpid()))if __name__ == '__main__':    pool = Pool(5)    tasks = ['听音乐', '吃饭', '打游戏', '洗衣服', '散步', '看孩子', '做饭']    for i in tasks:        pool.apply(task, args=(i,))  # 阻塞式    pool.close()    pool.join()    print('over!')