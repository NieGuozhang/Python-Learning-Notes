"""进程池：创建多个进程非阻塞式：全部添加队列中，立刻返回，并没有等待其他进程执行完毕之后，但是回调函数是等待任务完成之后才调用的"""import osfrom multiprocessing import Poolimport timeimport random# 非阻塞式进程def task(task_name):    print('开始做任务了！' + task_name)    start = time.time()    # 使用sleep()    time.sleep(random.random() * 2)    end = time.time()    return '完成{}，用时：{}，任务ID：{}'.format(task_name, (end - start), os.getpid())container = []def callback_func(n):    container.append(n)if __name__ == '__main__':    pool = Pool(5)  # 创建进程池对象，5代表同时执行的进程数    tasks = ['听音乐', '吃饭', '打游戏', '洗衣服', '散步', '看孩子', '做饭']    for i in tasks:        pool.apply_async(task, args=(i,), callback=callback_func)    pool.close()  # 添加任务结束    pool.join()  # 插队，加入    for c in container:        print(c)    print('over!')