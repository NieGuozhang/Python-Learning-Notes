"""greenlet 完成协程任务greenlet是python的一个C拓展，旨在提供可自行调度的“微线程”，即协程generator实现的协程在yield value时只能将value返回给调用者；而在greenlet中，target.switch(value)可以切换到指定的协程(target)，然后yield value。greenlet用switch来表示协程的切换，从一个协程切换到另一个协程需要显式指定。当创建一个greenlet时，首先初始化一个空的栈， switch到这个栈的时候，会运行在greenlet构造时传入的函数（首先在test1中打印 12），如果在这个函数（test1）中switch到其他协程（到了test2 打印34），那么该协程会被挂起，等到切换回来（在test2中切换回来 打印34）。当这个协程对应函数执行完毕，那么这个协程就变成dead状态。"""import timefrom greenlet import greenletdef a():  # 任务A    for i in range(5):        print('A' + str(i))        gb.switch()        time.sleep(0.1)def b():  # 任务B    for i in range(5):        print('B' + str(i))        gc.switch()        time.sleep(0.1)def c():  # 任务C    for i in range(5):        print('C' + str(i))        ga.switch()        time.sleep(0.1)if __name__ == '__main__':    ga = greenlet(a)    gb = greenlet(b)    gc = greenlet(c)    ga.switch()