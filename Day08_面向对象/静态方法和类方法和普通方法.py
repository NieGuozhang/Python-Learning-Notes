# 补充类方法'''静态方法：很类似类方法    1.需要装饰器@staticmethod    2.类中静态方法无需传递参数（cls, self）    3.也只能访问类的属性和方法，无法对象的属性和方法    4.加载时机同类方法总结：类方法， 静态方法不同：    1.装饰器不同    2.类方法是有参数的，静态方法没有参数相同：    1.都可以访问类的属性和方法，都不能访问对象的属性和方法    2.都可以通过类名去调用    3.都可以在对象创建之前使用，因为是不依赖于对象的。普通方法 与 两者区别：不同：    1.没有装饰器    2.普通方法永远依赖对象，因为每个普通方法中都有一个self.    3.只有创建了对象，才可以调用普通方法，否则调用不了。    '''class Person:    __age = 18    def __init__(self, name):        self.name = name    def show(self):        print('------>', Person.__age)    @classmethod    def update_age(cls):        Person.__age = 20        print('----->类方法')    @classmethod    def show_age(cls):        print(Person.__age)    @staticmethod    def test():        print('------->静态方法')        # print(self.name)  语法错误        print(Person.__age)Person.update_age()Person.show_age()Person.test()