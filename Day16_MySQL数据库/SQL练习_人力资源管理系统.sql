drop database if exists HR;create database HR default charset utf8;use HR;drop table if exists tb_emp;drop table if exists tb_dept;-- 创建部门表create table tb_dept(dno int not null comment '编号',dname varchar(10) not null comment '部门名称',dloc varchar(20) not null comment '部门所在地',primary key (dno));-- 添加部门记录insert into tb_dept values(10, '会计部', '北京'),(20, '研发部', '成都'),(30, '销售部', '重庆'),(40, '运维部', '深圳');-- 创建员工表create table tb_emp(eno int primary key,ename varchar(20) not null,job varchar(20) not null,mgr int,sal int not null,dno int comment '所在部门编号');alter table tb_emp drop foreign key fk_emp_dno;-- 添加外键约束alter table tb_emp add constraint fk_emp_dno foreign key (dno) references `tb_dept` (dno) on delete cascade on update cascade;-- 自参照完整性alter table tb_emp add constraint fk_emp_mgr foreign key (mgr) references tb_emp (eno);-- 添加员工记录insert into tb_emp values (7800, '张三丰', '总裁', null, 9000, 20);insert into tb_emp values (2056, '乔峰', '分析师', 7800, 5000, 20);insert into tb_emp values (3088, '李莫愁', '设计师', 2056, 3500, 20);insert into tb_emp values (3211, '张无忌', '程序员', 2056, 3200, 20);insert into tb_emp values (3233, '丘处机', '程序员', 2056, 3400, 20);insert into tb_emp values (3251, '张翠山', '程序员', 2056, 4000, 20);insert into tb_emp values (5566, '宋远桥', '会计师', 7800, 4000, 10);insert into tb_emp values (5234, '郭靖', '出纳', 5566, 2000, 10);insert into tb_emp values (3344, '黄蓉', '销售主管', 7800, 3000, 30);insert into tb_emp values (1359, '胡一刀', '销售员', 3344, 1800, 30);insert into tb_emp values (4466, '苗人凤', '销售员', 3344, 2500, 30);insert into tb_emp values (3244, '欧阳锋', '程序员', 3088, 3200, 20);insert into tb_emp values (3577, '杨过', '会计', 5566, 2200, 10);insert into tb_emp values (3588, '朱九真', '会计', 5566, 2500, 10);alter table tb_emp add column comm int default 1200 after sal;-- 查询薪资最高的员工姓名和工资select ename, sal from tb_emp where sal=(select max(sal) from `tb_emp`);-- 查询员工的姓名和年薪((月薪+津贴)*12)select ename as 姓名, (sal+ifnull(comm, 0))*12 as 年薪 from tb_emp;-- 查询有员工的部门的编号和人数select dno as 部门编号, count(dno) as 人数 from tb_emp group by dno;-- 查询所有部门的名称和人数select dname as 部门名称, ifnull(total,0) as 人数 from tb_dept a left outer join (select dno , count(dno) as total from tb_emp group by dno) b on a.dno=b.dno;-- 生成执行计划explain select eno, ename from tb_emp where eno=7800;explain select eno, ename from tb_emp where eno<>7800;explain select eno, ename from tb_emp where ename='张三丰';-- 查询薪资最高的员工(Boss除外)的姓名和工资explain select ename, sal from tb_emp where sal=(select max(sal) from tb_emp where mgr is not null);-- 查询薪水超过平均薪水的员工的姓名和工资select ename, sal from tb_emp where sal>(select avg(sal) from tb_emp);-- 查询薪水超过其所在部门平均薪水的员工的姓名、部门编号和工资select ename, a.dno, sal from tb_emp a inner join(select dno, avg(sal) as avgsal from tb_emp group by dno) b on a.dno=b.dno and a.sal>b.avgsal;-- 查询部门中薪水最高的人姓名、工资和所在部门名称select ename, sal, dname from tb_emp a inner join tb_dept b inner join (select dno, max(sal) as maxsal from tb_emp group by dno) c on a.dno=b.dno and a.sal=c.maxsal;-- 查询主管的姓名和职位-- 通常不推荐使用in或者not in集合运算和distinct去重操作-- 可以考虑使用exists或not exists替代掉集合运算和去重操作select ename, job from tb_emp where eno in (select distinct mgr from tb_emp where mgr is not null);select ename, job from tb_emp a where exists (select 'x' from tb_emp b where a.eno=b.mgr);select 'x';select 'x' from dual;select 'x' from tb_emp;select 'x' from tb_emp where eno=7800;select 'x' from tb_emp where eno=7900;select 'x' from dual where exists (select * from tb_emp where ename like '张%');select 'x' from dual where exists (select * from tb_emp where ename like '王%');-- 求薪水排在第4-8名的员工姓名和薪资select ename, sal from tb_emp order by sal desc limit 5 offset 3;select ename, sal from tb_emp order by sal desc limit 3,5;-- 查询薪资排名前3的员工姓名和工资select ename, sal from tb_emp order by sal desc limit 3;select ename, sal from tb_emp order by sal desc limit 3 offset 0;select ename, sal from tb_emp order by sal desc limit 0,3;-- 索引（index）create index idx_emp_ename on tb_emp (ename);select ename, dno from tb_emp where ename='张三丰';explain select ename, dno from tb_emp where ename='张三丰';explain select ename, dno from tb_emp where ename like '张%';-- 视图 (查询的快照，可以简化查询)-- 视图可以将用户的权限限制在指定列上，保护了数据的安全性。create view vw_dept_emp_count asselect dname as 部门名称, ifnull(total,0) as 人数 from tb_dept a left outer join (select dno , count(dno) as total from tb_emp group by dno) b on a.dno=b.dno;select * from vw_de pt_emp_count;